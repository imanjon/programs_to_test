notifications: # set notification options
  email:
    recipients:
      - one@example.com
      - other@example.com
    on_success: change
    on_failure: change
# change is when the repo status goes from pass to fail or vice versa
#   on_success: [always|never|change]
#   on_failure: [always|never|change]
# Or we could just disable all email
# email: false

# I need these ones before working
before_install:
   # - sudo dpkg --add-architecture i386
 - sudo add-apt-repository ppa:george-edison55/precise-backports --yes
 - sudo apt-get update -qq
   # - test -n $CC  && unset CC
   # - test -n $CXX && unset CXX
install:
 - sudo apt-get -qq install --force-yes binutils-mingw-w64-i686 gcc-mingw-w64-i686 g++-mingw-w64-i686 p7zip-full
   # - sudo apt-get -qq install --force-yes gcc-multilib
 - sudo apt-get -qq install --force-yes valgrind
 - sudo apt-get -qq install --force-yes cmake cmake-data
# - sudo apt-get install gcc-5 g++-5
before_script:
 - echo "This message is shown BEFORE the script is launched"
after_script:
 - echo "This message is shown AFTER the script is launched"
#addons:
#  apt:
#    sources:
#     - george-edison55-precise-backports # cmake 3.2.3 / doxygen 1.8.3
#    packages:
#     - cmake
#     - cmake-data
# Enable C support
language: c
# Compiler selection
#compiler:
# - clang
# - gcc
# Esto creo que no lo voy a usar, y encima casca
#install: make get-deps
# Different versions for compilers
matrix:
  include:
    - compiler: gcc
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9
            - gcc-4.9-multilib
      env: COMPILER=gcc-4.9 CXX=g++-4.9 CC=gcc-4.9
    - compiler: gcc
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
            - gcc-5-multilib
      env: COMPILER=gcc-5 CXX=g++-5 CC=gcc-5
    - compiler: clang
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6
          packages:
            - clang-3.6
      env: COMPILER=clang-3.6 CXX=clang++-3.6 CC=clang-3.6
    - compiler: clang
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.7
              # - george-edison55-precise-backports # cmake 3.2.3 / doxygen 1.8.3
          packages:
            - clang-3.7
              # - cmake
              # - cmake-data
      env: COMPILER=clang-3.7 CXX=clang++-3.7 CC=clang-3.7

#    - env: CXX=/usr/bin/g++ CC=/usr/bin/gcc
#    - env: CXX=/usr/bin/g++-4.6 CC=/usr/bin/gcc-4.6
#    - env: CXX=/usr/bin/g++-4.7 CC=/usr/bin/gcc-4.7
#    - env: CXX=/usr/bin/g++-4.8 CC=/usr/bin/gcc-4.8
#    - env: CXX=/usr/bin/g++-4.9 CC=/usr/bin/gcc-4.9
#    - env: CXX=/usr/bin/g++-5 CC=/usr/bin/gcc-5
#    - env: CXX=g++-5 CC=gcc-5
#    - env: CXX=g++-6 CC=gcc-6
#    - env: CXX=clang++-3.8 CC=clang-3.8
#    - env: CXX=clang++ CC=clang
# Build steps
script:
 - mkdir build
 - cd build
 - export CC=${COMPILER}
 - cmake ../program_sources -DCMAKE_C_COMPILER=${CC} -DCMAKE_CXX_COMPILER=${CXX} -DTESTING_USE_GTEST=1 && make && make test
